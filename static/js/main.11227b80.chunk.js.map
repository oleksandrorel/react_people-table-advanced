{"version":3,"sources":["components/Home.tsx","components/PersonName.tsx","components/PersonRow.tsx","components/TableHeader.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","api/people.tsx","components/MainNavigation.tsx","components/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PersonName","person","search","useLocation","to","slug","classNames","row__female","sex","name","PersonRow","people","params","useRouteMatch","location","sortBy","URLSearchParams","get","findParent","find","personEl","born","died","motherName","fatherName","row__selected","personId","sorted__cell","SORTED_HEADERS","TableHeader","header","history","useHistory","searchParams","sortOrder","includes","onClick","newSortBy","toLowerCase","set","push","toString","src","alt","TABLE_HEADERS","PeopleTable","map","key","PeoplePage","useState","setPeople","appliedQuery","query","setQuery","useEffect","fetch","then","response","json","applyQuery","useCallback","debounce","newQuery","delete","value","onChange","e","target","visiblePeople","filter","sort","a","b","localeCompare","reverse","getVisiblePeople","MainNavigation","exact","activeClassName","NotFoundPage","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11227b80.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage = () => (\n  <div>\n    <h2 className=\"pageTitle\">Home page</h2>\n  </div>\n);\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { personDetails } from './types';\n\nexport const PersonName: React.FC<personDetails> = ({ person }) => {\n  const { search } = useLocation();\n\n  if (!person) {\n    return null;\n  }\n\n  return (\n    <Link\n      to={`/people/${person.slug}${search}`}\n      className={classNames('row__male', { row__female: person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useRouteMatch, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PersonName } from './PersonName';\nimport {\n  personDetails,\n  Person,\n  People,\n  Params,\n} from './types';\n\nexport const PersonRow: React.FC<personDetails & People> = ({ person, people }) => {\n  const { params }: Params = useRouteMatch() || '';\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sortBy = searchParams.get('sortBy') || '';\n  const findParent = (name: string) => {\n    const parent = people.find((personEl: Person) => personEl.name === name);\n\n    return parent;\n  };\n\n  if (!person) {\n    return null;\n  }\n\n  const {\n    sex, born, died,\n    motherName, fatherName,\n  } = person;\n\n  return (\n    <tr\n      className={classNames(\n        'row__Person', { row__selected: person.slug === params.personId },\n      )}\n    >\n\n      <td\n        className={classNames(\n          'row__Person', 'row__cell', { sorted__cell: sortBy === 'name' },\n        )}\n      >\n        <PersonName person={person} />\n      </td>\n\n      <td className={classNames(\n        'row__Person', 'row__cell', { sorted__cell: sortBy === 'sex' },\n      )}\n      >\n        {sex}\n      </td>\n      <td className={classNames(\n        'row__Person', 'row__cell', { sorted__cell: sortBy === 'born' },\n      )}\n      >\n        {born}\n      </td>\n      <td className={classNames(\n        'row__Person', 'row__cell', { sorted__cell: sortBy === 'died' },\n      )}\n      >\n        {died}\n      </td>\n      <td className=\"row__Person row__cell\">\n        {findParent(motherName)\n          ? (\n            <PersonName person={findParent(motherName)} />\n          )\n          : (\n            motherName\n          )}\n      </td>\n      <td className=\"row__Person row__cell\">\n        {findParent(fatherName)\n          ? (\n            <PersonName person={findParent(fatherName)} />\n          )\n          : (\n            fatherName\n          )}\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Header } from './types';\n\nconst SORTED_HEADERS = ['Name', 'Sex', 'Born', 'Died'];\n\nexport const TableHeader: React.FC<Header > = ({ header }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  const clickHandler = (newSortBy: string) => {\n    if (newSortBy !== sortBy || sortOrder === 'DESC') {\n      searchParams.set('sortOrder', 'ASC');\n    } else {\n      searchParams.set('sortOrder', 'DESC');\n    }\n\n    searchParams.set('sortBy', newSortBy);\n    history.push(`?${searchParams.toString()}`);\n  };\n\n  return (\n    SORTED_HEADERS.includes(header)\n      ? (\n        <th\n          className=\"peopleTable__rowsHeader peopleTable__cell\"\n          onClick={() => {\n            clickHandler(header.toLowerCase());\n          }}\n        >\n          {header}\n          {sortBy !== header.toLowerCase()\n            ? (\n              <span><img src=\"images/sort_both.png\" alt=\"not sorted\" /></span>\n            )\n            : (\n              sortOrder === 'ASC'\n                ? <span><img src=\"images/sort_desc.png\" alt=\"sorted DESC\" /></span>\n                : <span><img src=\"images/sort_asc.png\" alt=\"sorted ASC\" /></span>\n            )}\n        </th>\n      )\n      : (\n        <th\n          className=\"peopleTable__rowsHeader peopleTable__cell\"\n        >\n          {header}\n        </th>\n      )\n  );\n};\n","import React from 'react';\nimport { PersonRow } from './PersonRow';\nimport { TableHeader } from './TableHeader';\n\nimport { People } from './types';\n\nconst TABLE_HEADERS = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n\nexport const PeopleTable: React.FC<People> = ({ people }) => (\n  <div className=\"peopleTable\">\n\n    <table className=\"peopleTable__Body\">\n      <thead>\n        <tr className=\"peopleTable__rowsHeader\">\n          {TABLE_HEADERS.map(header => (\n            <TableHeader key={header} header={header} />\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonRow person={person} key={person.slug} people={people} />\n        ))}\n      </tbody>\n\n    </table>\n  </div>\n);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport { getPeople } from '../api/people';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from './types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const appliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState<string>(appliedQuery);\n\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople);\n  }, []);\n\n  const applyQuery = useCallback(\n    debounce((newQuery) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      history.push(\n        {\n          search: searchParams.toString(),\n        },\n      );\n    }, 500),\n    [],\n  );\n\n  const getVisiblePeople = () => {\n    const visiblePeople = appliedQuery\n      ? people.filter(person => (\n        (person.name + person.motherName + person.fatherName)\n          .toLowerCase().includes(appliedQuery.toLowerCase())))\n      : people;\n\n    if (sortBy) {\n      switch (sortBy) {\n        case 'name':\n        case 'sex':\n          return sortOrder === 'ASC'\n            ? visiblePeople.sort((a, b) => (a[sortBy].localeCompare(b[sortBy])))\n            : visiblePeople.reverse();\n        case 'born':\n        case 'died':\n          return sortOrder === 'ASC'\n            ? visiblePeople.sort((a, b) => (a[sortBy] - b[sortBy]))\n            : visiblePeople.reverse();\n\n        default:\n          break;\n      }\n    }\n\n    return visiblePeople;\n  };\n\n  return (\n    <div>\n      <h2 className=\"pageTitle\">People page</h2>\n      <div className=\"people__filter\">\n        <div>\n          <p className=\"peopleTable__Header\">People table</p>\n          <span className=\"formtext_left\"> Find person by name: </span>\n          <input\n            value={query}\n            onChange={(e) => {\n              setQuery(e.target.value);\n              applyQuery(e.target.value);\n            }}\n          />\n        </div>\n      </div>\n      <PeopleTable people={getVisiblePeople()} />\n    </div>\n  );\n};\n","const url = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => (\n  fetch(url)\n    .then(response => response.json())\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport 'bulma';\nimport '../App.scss';\n\nexport const MainNavigation = () => (\n  <nav className=\"navbar\">\n    <NavLink\n      to=\"/\"\n      exact\n      className=\"navbar-item is-tab\"\n      activeClassName=\"is-active\"\n    >\n      Home page\n    </NavLink>\n\n    <NavLink\n      to=\"/people\"\n      className=\"navbar-item is-tab\"\n      activeClassName=\"is-active\"\n    >\n      People page\n    </NavLink>\n  </nav>\n);\n","import React from 'react';\n\nexport const NotFoundPage = () => (\n  <div className=\"notFoundPage\">\n    <h2 className=\"pageTitle\">Not found page</h2>\n  </div>\n);\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { HomePage } from './components/Home';\nimport { PeoplePage } from './components/PeoplePage';\n\nimport './App.scss';\nimport { MainNavigation } from './components/MainNavigation';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nconst App = () => (\n  <div className=\"App\">\n    <MainNavigation />\n\n    <h1 className=\"app__Header\">React people table</h1>\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/people/:personId?\" component={PeoplePage} />\n\n      <Redirect path=\"/home\" to=\"/\" />\n      <Route component={NotFoundPage} />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}